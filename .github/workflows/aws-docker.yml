name: aws-docker
on:
  push:
    branches: '**'

jobs:
  PublicaNaAWS:
    runs-on: trabalessandra
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Verifica contêiner
        id: check_container
        continue-on-error: true
        run: |
          branch=${{ github.ref }}
          branch=${branch/refs\/heads\//}
          repo=${{ github.repository }}
          repo=${repo/*\//}
          repo=${repo,,} # converte o nome do repositório para minúsculo

          echo $branch | tee branch.txt
          echo $repo | tee repo.txt

          # Verifica se o contêiner existe
          if docker inspect "${repo}_${branch}_1" >/dev/null 2>&1; then
          echo "Container existe"
          exit 0
          else
          echo "Container não existe"
          exit 1
          fi

      - name: Configura nome do container, envia branch e repositório
        run: |
            branch=$(cat branch.txt)
            repo=$(cat repo.txt)

            sed -i "s/REPO/${repo}/g" docker-compose.yml
            sed -i "s/BRANCH/${branch}/g" docker-compose.yml  
            
      - name: Atualiza código no contêiner
        if: ${{ steps.check_container.outcome == 'success' }}
        run: |
            docker exec ${repo}_${branch}_1 rm -rf /usr/local/apache2/htdocs/ && \
            docker cp public_html ${repo}_${branch}_1:/usr/local/apache2/htdocs
        shell: bash

      - name: Builda e sobe o container
        if: ${{ steps.check_container.outcome == 'failure' }}
        run: docker-compose up -d --build #--force-recreate
        shell: bash

      - name: Configura NGINX
        run: |
            branch=$(cat branch.txt)
            repo=$(cat repo.txt)

            PORTA=$(docker-compose port ${branch} 80| cut -d: -f2)
            
            # Define o caminho do arquivo de configuração do NGINX
            config_file="/etc/nginx/sites-enabled/${repo}_${branch}.conf"

            # Lê o modelo de configuração do NGINX para uma variável
            template=$(cat /etc/nginx/sites-available/template-trabalessandra.conf)

            # Substitui as variáveis no modelo de configuração com as informações corretas
            template=$(echo $template | sed -r "s/BRANCH/$branch/")
            template=$(echo $template | sed -r "s/PORTA/$PORTA/")

            # Cria o novo arquivo de configuração com as informações atualizadas
            echo "$template" | sudo tee > $config_file
            
      - name: Recarrega NGINX
        run: /usr/sbin/nginx -s reload



